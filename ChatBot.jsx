import React, { useState, useEffect } from "react";
import { FaRobot, FaTimes, FaPaperPlane } from "react-icons/fa";
import { useSettings } from "../context/SettingsContext";
import robotAssistant from "../assets/robot-assistant.png";
import robot from "../assets/robot.png";

const ChatBot = () => {
    const { translate, language } = useSettings();
    const [isOpen, setIsOpen] = useState(false);
    const [messages, setMessages] = useState([]);
    const [inputMessage, setInputMessage] = useState("");
    const [hasGreeted, setHasGreeted] = useState(false);

    // Enhanced patterns with more natural responses
    const patterns = [
        {
            matches: [
                "hello",
                "hi",
                "hey",
                "greetings",
                "рдирдорд╕реНрддреЗ",
                "рд╣рд╛рдп",
                "рд╕реБрдкреНрд░рднрд╛рдд",
                "рд╢реБрдн рд╕рдВрдзреНрдпрд╛",
            ],
            response: {
                english:
                    "Hi there! ЁЯСЛ I'm your Rent Elite virtual assistant. How can I make your car rental experience better today?",
                hindi: "рдирдорд╕реНрддреЗ! ЁЯСЛ рдореИрдВ рдЖрдкрдХрд╛ рд░реЗрдВрдЯ рдПрд▓реАрдЯ рд╡рд░реНрдЪреБрдЕрд▓ рд╕рд╣рд╛рдпрдХ рд╣реВрдВред рдЖрдЬ рдореИрдВ рдЖрдкрдХреЗ рдХрд╛рд░ рд░реЗрдВрдЯрд▓ рдЕрдиреБрднрд╡ рдХреЛ рдХреИрд╕реЗ рдмреЗрд╣рддрд░ рдмрдирд╛ рд╕рдХрддрд╛ рд╣реВрдВ?",
            },
        },
        {
            matches: ["bye", "goodbye", "see you", "рдЕрд▓рд╡рд┐рджрд╛", "рдлрд┐рд░ рдорд┐рд▓реЗрдВрдЧреЗ"],
            response: {
                english:
                    "Thanks for chatting! If you need anything else, I'll be right here. Have a great day! ЁЯШК",
                hindi: "рдЪреИрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж! рдпрджрд┐ рдЖрдкрдХреЛ рдХреБрдЫ рдФрд░ рдЪрд╛рд╣рд┐рдП, рддреЛ рдореИрдВ рдпрд╣реАрдВ рд╣реВрдВред рдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛ! ЁЯШК",
            },
        },
        {
            matches: ["thank", "thanks", "рдзрдиреНрдпрд╡рд╛рдж", "рд╢реБрдХреНрд░рд┐рдпрд╛"],
            response: {
                english:
                    "You're welcome! ЁЯШК Is there anything else you'd like to know about our services?",
                hindi: "рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯШК рдХреНрдпрд╛ рдЖрдк рд╣рдорд╛рд░реА рд╕реЗрд╡рд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдХреБрдЫ рдФрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?",
            },
        },
        {
            matches: [
                "how to book",
                "book car",
                "booking process",
                "rent car",
                "how do i book",
                "booking steps",
                "make reservation",
                "рдХрд╛рд░ рдмреБрдХ",
                "рдХреИрд╕реЗ рдмреБрдХ рдХрд░реЗрдВ",
                "рдмреБрдХрд┐рдВрдЧ рдкреНрд░рдХреНрд░рд┐рдпрд╛",
            ],
            response: {
                english:
                    "To book a car:\n1. Browse our fleet and select your desired car\n2. Click 'Book Now'\n3. Choose your dates\n4. Fill in your details\n5. Confirm payment\nNeed more help? Our support team is available 24/7.",
                hindi: "рдХрд╛рд░ рдмреБрдХ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:\n1. рд╣рдорд╛рд░реА рдлреНрд▓реАрдЯ рджреЗрдЦреЗрдВ рдФрд░ рдЕрдкрдиреА рдкрд╕рдВрджреАрджрд╛ рдХрд╛рд░ рдЪреБрдиреЗрдВ\n2. 'рдЕрднреА рдмреБрдХ рдХрд░реЗрдВ' рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ\n3. рддрд╛рд░реАрдЦреЗрдВ рдЪреБрдиреЗрдВ\n4. рдЕрдкрдиреА рдЬрд╛рдирдХрд╛рд░реА рднрд░реЗрдВ\n5. рднреБрдЧрддрд╛рди рдХреА рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ\nрдФрд░ рдорджрдж рдЪрд╛рд╣рд┐рдП? рд╣рдорд╛рд░реА рд╕рд╣рд╛рдпрддрд╛ рдЯреАрдо 24/7 рдЙрдкрд▓рдмреНрдз рд╣реИред",
            },
        },
        {
            matches: [
                "cancel booking",
                "cancellation",
                "cancel reservation",
                "how to cancel",
                "рдмреБрдХрд┐рдВрдЧ рд░рджреНрдж",
                "рдХреИрдВрд╕рд┐рд▓",
            ],
            response: {
                english:
                    "To cancel your booking:\n1. Go to 'My Bookings'\n2. Find your reservation\n3. Click 'Cancel Booking'\n\nNote: Free cancellation is available up to 48 hours before pickup.",
                hindi: "рдмреБрдХрд┐рдВрдЧ рд░рджреНрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:\n1. 'рдореЗрд░реА рдмреБрдХрд┐рдВрдЧ' рдкрд░ рдЬрд╛рдПрдВ\n2. рдЕрдкрдиреА рдмреБрдХрд┐рдВрдЧ рдвреВрдВрдвреЗрдВ\n3. 'рдмреБрдХрд┐рдВрдЧ рд░рджреНрдж рдХрд░реЗрдВ' рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ\n\nрдиреЛрдЯ: рдкрд┐рдХрдЕрдк рд╕реЗ 48 рдШрдВрдЯреЗ рдкрд╣рд▓реЗ рддрдХ рдореБрдлреНрдд рдХреИрдВрд╕рд┐рд▓реЗрд╢рди рдЙрдкрд▓рдмреНрдз рд╣реИред",
            },
        },
        {
            matches: [
                "payment method",
                "payment options",
                "how to pay",
                "accepted payment",
                "рднреБрдЧрддрд╛рди рд╡рд┐рдзрд┐",
                "рдкреЗрдореЗрдВрдЯ",
            ],
            response: {
                english:
                    "We accept:\n- Credit/Debit Cards\n- PayPal\n- Net Banking\n- UPI (for Indian customers)\n\nAll payments are secured with end-to-end encryption.",
                hindi: "рд╣рдо рд╕реНрд╡реАрдХрд╛рд░ рдХрд░рддреЗ рд╣реИрдВ:\n- рдХреНрд░реЗрдбрд┐рдЯ/рдбреЗрдмрд┐рдЯ рдХрд╛рд░реНрдб\n- рдкреЗрдкрд╛рд▓\n- рдиреЗрдЯ рдмреИрдВрдХрд┐рдВрдЧ\n- рдпреВрдкреАрдЖрдИ\n\nрд╕рднреА рднреБрдЧрддрд╛рди рдПрдВрдб-рдЯреВ-рдПрдВрдб рдПрдиреНрдХреНрд░рд┐рдкреНрд╢рди рдХреЗ рд╕рд╛рде рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИрдВред",
            },
        },
        {
            matches: [
                "documents required",
                "what documents",
                "documents needed",
                "required documents",
                "рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬ",
                "рдЬрд░реВрд░реА рдХрд╛рдЧрдЬрд╛рдд",
            ],
            response: {
                english:
                    "Required documents:\n- Valid Driver's License\n- Government ID Proof\n- Credit Card\n- Insurance Information\n\nInternational customers also need:\n- Passport\n- International Driving Permit",
                hindi: "рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬ:\n- рд╡реИрдз рдбреНрд░рд╛рдЗрд╡рд┐рдВрдЧ рд▓рд╛рдЗрд╕реЗрдВрд╕\n- рд╕рд░рдХрд╛рд░реА рдкрд╣рдЪрд╛рди рдкреНрд░рдорд╛рдг\n- рдХреНрд░реЗрдбрд┐рдЯ рдХрд╛рд░реНрдб\n- рдмреАрдорд╛ рдЬрд╛рдирдХрд╛рд░реА\n\nрд╡рд┐рджреЗрд╢реА рдЧреНрд░рд╛рд╣рдХреЛрдВ рдХреЛ рдпрд╣ рднреА рдЪрд╛рд╣рд┐рдП:\n- рдкрд╛рд╕рдкреЛрд░реНрдЯ\n- рдЕрдВрддрд░реНрд░рд╛рд╖реНрдЯреНрд░реАрдп рдбреНрд░рд╛рдЗрд╡рд┐рдВрдЧ рдкрд░рдорд┐рдЯ",
            },
        },
        {
            matches: [
                "contact support",
                "help",
                "customer service",
                "support number",
                "рд╕рд╣рд╛рдпрддрд╛",
                "рд╕рдВрдкрд░реНрдХ",
                "рдХрд╕реНрдЯрдорд░ рд╕рд░реНрд╡рд┐рд╕",
            ],
            response: {
                english:
                    "Contact our support team:\nPhone: +1-800-RENT-ELITE\nEmail: support@rentelite.com\nLive Chat: Available 24/7\n\nVisit our Contact Us page for more options.",
                hindi: "рд╣рдорд╛рд░реА рд╕рд╣рд╛рдпрддрд╛ рдЯреАрдо рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ:\nрдлреЛрди: +1-800-RENT-ELITE\nрдИрдореЗрд▓: support@rentelite.com\nрд▓рд╛рдЗрд╡ рдЪреИрдЯ: 24/7 рдЙрдкрд▓рдмреНрдз\n\nрдЕрдзрд┐рдХ рд╡рд┐рдХрд▓реНрдкреЛрдВ рдХреЗ рд▓рд┐рдП рд╣рдорд╛рд░рд╛ рд╕рдВрдкрд░реНрдХ рдкреЗрдЬ рджреЗрдЦреЗрдВред",
            },
        },
        {
            matches: [
                "price",
                "cost",
                "rate",
                "charges",
                "рдХреАрдордд",
                "рджрд░",
                "рд╢реБрд▓реНрдХ",
            ],
            response: {
                english:
                    "Our rental rates vary based on the car model and duration. Would you like me to:\n1. Show you our current offers?\n2. Explain our pricing structure?\n3. Help you find cars within your budget?\n\nJust let me know what works best for you! ЁЯЪЧ",
                hindi: "рд╣рдорд╛рд░реА рдХрд┐рд░рд╛рдпреЗ рдХреА рджрд░реЗрдВ рдХрд╛рд░ рдореЙрдбрд▓ рдФрд░ рдЕрд╡рдзрд┐ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдЕрд▓рдЧ-рдЕрд▓рдЧ рд╣реЛрддреА рд╣реИрдВред рдХреНрдпрд╛ рдЖрдк рдЪрд╛рд╣реЗрдВрдЧреЗ рдХрд┐ рдореИрдВ:\n1. рдЖрдкрдХреЛ рд╣рдорд╛рд░реЗ рд╡рд░реНрддрдорд╛рди рдСрдлрд░ рджрд┐рдЦрд╛рдКрдВ?\n2. рд╣рдорд╛рд░реА рдореВрд▓реНрдп рд╕рдВрд░рдЪрдирд╛ рд╕рдордЭрд╛рдКрдВ?\n3. рдЖрдкрдХреЗ рдмрдЬрдЯ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдХрд╛рд░реЗрдВ рдЦреЛрдЬрдиреЗ рдореЗрдВ рдорджрдж рдХрд░реВрдВ?\n\nрдмрд╕ рдореБрдЭреЗ рдмрддрд╛рдПрдВ рдХрд┐ рдЖрдкрдХреЗ рд▓рд┐рдП рдХреНрдпрд╛ рд╕рд╣реА рд░рд╣реЗрдЧрд╛! ЁЯЪЧ",
            },
        },
        {
            matches: [
                "how are you",
                "how're you",
                "how you doing",
                "what's up",
                "whats up",
                "how do you do",
                "how is it going",
                "рдХреИрд╕реЗ рд╣реЛ",
                "рдХреИрд╕рд╛ рдЪрд▓ рд░рд╣рд╛ рд╣реИ",
                "рдХреНрдпрд╛ рд╣рд╛рд▓ рд╣реИ",
                "рд╕рдм рдареАрдХ",
            ],
            response: {
                english:
                    "I'm doing great, thanks for asking! ЁЯШК I'm here and ready to help you find the perfect car rental. How can I assist you today?",
                hindi: "рдореИрдВ рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛ рд╣реВрдВ, рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж! ЁЯШК рдореИрдВ рдЖрдкрдХреЛ рд╕рд╣реА рдХрд╛рд░ рд░реЗрдВрдЯрд▓ рдвреВрдВрдврдиреЗ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реВрдВред рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рд╕рд╣рд╛рдпрддрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?",
            },
        },
        {
            matches: [
                "who are you",
                "what are you",
                "what can you do",
                "your name",
                "tell me about yourself",
                "рдЖрдк рдХреМрди рд╣реИрдВ",
                "рддреБрдо рдХреНрдпрд╛ рд╣реЛ",
                "рддреБрдо рдХреНрдпрд╛ рдХрд░ рд╕рдХрддреЗ рд╣реЛ",
                "рдЕрдкрдиреЗ рдмрд╛рд░реЗ рдореЗрдВ рдмрддрд╛рдУ",
            ],
            response: {
                english:
                    "I'm the Rent Elite virtual assistant! ЁЯдЦ I can help you with:\nтАв Finding the perfect car\nтАв Booking process\nтАв Managing reservations\nтАв Answering questions about our services\nтАв And much more!\n\nWhat would you like help with?",
                hindi: "рдореИрдВ рд░реЗрдВрдЯ рдПрд▓реАрдЯ рдХрд╛ рд╡рд░реНрдЪреБрдЕрд▓ рд╕рд╣рд╛рдпрдХ рд╣реВрдВ! ЁЯдЦ рдореИрдВ рдЖрдкрдХреА рдЗрди рдЪреАрдЬрд╝реЛрдВ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ:\nтАв рд╕рд╣реА рдХрд╛рд░ рдЦреЛрдЬрдиреЗ рдореЗрдВ\nтАв рдмреБрдХрд┐рдВрдЧ рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдореЗрдВ\nтАв рдЖрд░рдХреНрд╖рдг рдкреНрд░рдмрдВрдзрди рдореЗрдВ\nтАв рд╣рдорд╛рд░реА рд╕реЗрд╡рд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдХрд╛рд░реА рджреЗрдиреЗ рдореЗрдВ\nтАв рдФрд░ рдмрд╣реБрдд рдХреБрдЫ!\n\nрдЖрдкрдХреЛ рдХрд┐рд╕ рд╡рд┐рд╖рдп рдореЗрдВ рдорджрдж рдЪрд╛рд╣рд┐рдП?",
            },
        },
        {
            matches: [
                "good morning",
                "morning",
                "good afternoon",
                "good evening",
                "рд╢реБрдн рдкреНрд░рднрд╛рдд",
                "рд╕реБрдкреНрд░рднрд╛рдд",
                "рд╢реБрдн рджреЛрдкрд╣рд░",
                "рд╢реБрдн рд╕рдВрдзреНрдпрд╛",
            ],
            response: {
                english:
                    "Hello! ЁЯСЛ It's great to see you! I hope you're having a wonderful day. How may I assist you with your car rental needs?",
                hindi: "рдирдорд╕реНрддреЗ! ЁЯСЛ рдЖрдкрд╕реЗ рдорд┐рд▓рдХрд░ рдЕрдЪреНрдЫрд╛ рд▓рдЧрд╛! рдЖрд╢рд╛ рд╣реИ рдЖрдкрдХрд╛ рджрд┐рди рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИред рдореИрдВ рдЖрдкрдХреА рдХрд╛рд░ рд░реЗрдВрдЯрд▓ рд╕рдВрдмрдВрдзрд┐рдд рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?",
            },
        },
        {
            matches: [
                "are you human",
                "are you real",
                "are you a bot",
                "are you ai",
                "рдХреНрдпрд╛ рддреБрдо рдЗрдВрд╕рд╛рди рд╣реЛ",
                "рдХреНрдпрд╛ рддреБрдо рдЕрд╕рд▓реА рд╣реЛ",
                "рдХреНрдпрд╛ рддреБрдо рдмреЙрдЯ рд╣реЛ",
                "рдХреНрдпрд╛ рддреБрдо рдПрдЖрдИ рд╣реЛ",
            ],
            response: {
                english:
                    "I'm an AI chatbot designed to help you with Rent Elite's services! ЁЯдЦ While I'm not human, I'm here to provide quick and helpful assistance with your car rental needs. What can I help you with today?",
                hindi: "рдореИрдВ рдПрдХ рдПрдЖрдИ рдЪреИрдЯрдмреЙрдЯ рд╣реВрдВ рдЬреЛ рд░реЗрдВрдЯ рдПрд▓реАрдЯ рдХреА рд╕реЗрд╡рд╛рдУрдВ рдореЗрдВ рдЖрдкрдХреА рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдмрдирд╛рдпрд╛ рдЧрдпрд╛ рд╣реИ! ЁЯдЦ рд╣рд╛рд▓рд╛рдВрдХрд┐ рдореИрдВ рдорд╛рдирд╡ рдирд╣реАрдВ рд╣реВрдВ, рдореИрдВ рдЖрдкрдХреА рдХрд╛рд░ рд░реЗрдВрдЯрд▓ рдЬрд░реВрд░рддреЛрдВ рдореЗрдВ рддреНрд╡рд░рд┐рдд рдФрд░ рд╕рд╣рд╛рдпрдХ рдорджрдж рдкреНрд░рджрд╛рди рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВред рдЖрдЬ рдореИрдВ рдЖрдкрдХреА рдХреНрдпрд╛ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?",
            },
        },
        {
            matches: [
                "how's the weather",
                "what's the weather",
                "рдореМрд╕рдо рдХреИрд╕рд╛ рд╣реИ",
                "weather",
            ],
            response: {
                english:
                    "While I can't tell you about the weather, I can help you find the perfect car for any weather condition! ЁЯШК Would you like to see our all-weather vehicles or perhaps our convertibles for sunny days?",
                hindi: "рд╣рд╛рд▓рд╛рдВрдХрд┐ рдореИрдВ рдореМрд╕рдо рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдирд╣реАрдВ рдмрддрд╛ рд╕рдХрддрд╛, рд▓реЗрдХрд┐рди рдореИрдВ рдЖрдкрдХреЛ рд╣рд░ рдореМрд╕рдо рдХреЗ рд▓рд┐рдП рдПрдХрджрдо рд╕рд╣реА рдХрд╛рд░ рдЦреЛрдЬрдиреЗ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ! ЁЯШК рдХреНрдпрд╛ рдЖрдк рд╣рдорд╛рд░реА рдСрд▓-рд╡реЗрджрд░ рд╡реНрд╣реАрдХрд▓реНрд╕ рджреЗрдЦрдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ рдпрд╛ рдлрд┐рд░ рдзреВрдк рдХреЗ рджрд┐рдиреЛрдВ рдХреЗ рд▓рд┐рдП рдХрдиреНрд╡рд░реНрдЯрд┐рдмрд▓ рдХрд╛рд░реЗрдВ?",
            },
        },
    ];

    // Enhanced findBestMatch function with FAQ suggestion
    const findBestMatch = (input) => {
        const normalizedInput = input.toLowerCase();

        // Check for direct matches first
        for (const pattern of patterns) {
            if (
                pattern.matches.some((match) =>
                    normalizedInput.includes(match.toLowerCase())
                )
            ) {
                return pattern.response[language] || pattern.response.english;
            }
        }

        // If no direct match, provide a helpful response with FAQ suggestion
        const noMatchResponses = {
            english: [
                "I'm not quite sure about that one. ЁЯдФ Let me help you find the right information:",
                "\n1. Check our FAQ page for detailed answers: [FAQ Link]",
                "\n2. Contact our support team 24/7",
                "\n3. Try rephrasing your question",
                "\nOr, you can ask me about:",
                "тАв Booking process",
                "тАв Available cars",
                "тАв Pricing and payments",
                "тАв Cancellation policy",
                "тАв Required documents",
                "\nWhat would you like to know more about? ЁЯШК",
            ].join("\n"),
            hindi: [
                "рдореБрдЭреЗ рдЗрд╕ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрд░реА рдЬрд╛рдирдХрд╛рд░реА рдирд╣реАрдВ рд╣реИред ЁЯдФ рдЪрд▓рд┐рдП рд╕рд╣реА рдЬрд╛рдирдХрд╛рд░реА рдЦреЛрдЬрдиреЗ рдореЗрдВ рдореИрдВ рдЖрдкрдХреА рдорджрдж рдХрд░рддрд╛ рд╣реВрдВ:",
                "\n1. рд╡рд┐рд╕реНрддреГрдд рдЬрд╡рд╛рдмреЛрдВ рдХреЗ рд▓рд┐рдП рд╣рдорд╛рд░рд╛ FAQ рдкреЗрдЬ рджреЗрдЦреЗрдВ: [FAQ рд▓рд┐рдВрдХ]",
                "\n2. рд╣рдорд╛рд░реА рд╕рд╣рд╛рдпрддрд╛ рдЯреАрдо рд╕реЗ 24/7 рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ",
                "\n3. рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рджреВрд╕рд░реЗ рддрд░реАрдХреЗ рд╕реЗ рдкреВрдЫрдиреЗ рдХрд╛ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ",
                "\nрдпрд╛, рдЖрдк рдореБрдЭрд╕реЗ рдЗрди рд╡рд┐рд╖рдпреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВ:",
                "тАв рдмреБрдХрд┐рдВрдЧ рдкреНрд░рдХреНрд░рд┐рдпрд╛",
                "тАв рдЙрдкрд▓рдмреНрдз рдХрд╛рд░реЗрдВ",
                "тАв рдХреАрдорддреЗрдВ рдФрд░ рднреБрдЧрддрд╛рди",
                "тАв рд░рджреНрджреАрдХрд░рдг рдиреАрддрд┐",
                "тАв рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬ",
                "\nрдЖрдк рдХрд┐рд╕ рдмрд╛рд░реЗ рдореЗрдВ рдФрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ? ЁЯШК",
            ].join("\n"),
        };

        return noMatchResponses[language] || noMatchResponses.english;
    };

    // Enhanced message handling with typing indicator
    const [isTyping, setIsTyping] = useState(false);

    const handleSendMessage = (e) => {
        e.preventDefault();
        if (!inputMessage.trim()) return;

        // Add user message
        setMessages((prev) => [
            ...prev,
            { type: "user", content: inputMessage },
        ]);

        // Show typing indicator
        setIsTyping(true);

        // Get bot response
        const botResponse = findBestMatch(inputMessage);

        // Simulate natural typing delay (varying based on response length)
        const typingDelay = Math.min(1000 + botResponse.length * 10, 3000);

        setTimeout(() => {
            setMessages((prev) => [
                ...prev,
                { type: "bot", content: botResponse },
            ]);
            setIsTyping(false);
        }, typingDelay);

        setInputMessage("");
    };

    useEffect(() => {
        // Only add the welcome message when the chat is opened and hasn't greeted yet
        if (isOpen && !hasGreeted) {
            setTimeout(() => {
                setMessages([
                    {
                        type: "bot",
                        content:
                            language === "hindi"
                                ? "рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?"
                                : "Hello! How can I assist you today?",
                    },
                ]);
                setHasGreeted(true);
            }, 500);
        }
    }, [isOpen, hasGreeted, language]);

    // Helper function to format message content with proper line breaks
    const formatMessage = (content) => {
        // Replace \n with proper line breaks for rendering
        return content.split("\n").map((line, i) => (
            <React.Fragment key={i}>
                {line}
                {i < content.split("\n").length - 1 && <br />}
            </React.Fragment>
        ));
    };

    return (
        <div className="fixed bottom-4 right-4 z-50">
            {/* Chat Icon */}
            <button
                onClick={() => setIsOpen(!isOpen)}
                className={`bg-emerald-600 text-white p-4 rounded-full shadow-lg hover:bg-emerald-700 transition-all duration-300 ${
                    isOpen ? "scale-0" : "scale-100"
                }`}
            >
                <img
                    src={robotAssistant}
                    alt="Robot Assistant Icon"
                    className="w-8 h-8"
                />
                {/* <FaRobot className="text-2xl" /> */}
            </button>

            {/* Chat Window */}
            <div
                className={`absolute bottom-0 right-0 w-96 bg-white rounded-lg shadow-xl transition-all duration-300 transform ${
                    isOpen ? "scale-100" : "scale-0"
                }`}
            >
                {/* Header */}
                <div className="bg-emerald-600 text-white p-4 rounded-t-lg flex justify-between items-center">
                    <div className="flex items-center gap-2">
                        <img src={robot} alt="Robot Icon" className="w-6 h-6" />
                        <h3 className="font-semibold">Rent Elite Assistant</h3>
                    </div>
                    <button
                        onClick={() => setIsOpen(false)}
                        className="text-white hover:text-gray-200 transition-colors"
                    >
                        <FaTimes />
                    </button>
                </div>

                {/* Messages */}
                <div className="h-96 overflow-y-auto p-4 space-y-4">
                    {messages.map((message, index) => (
                        <div
                            key={index}
                            className={`flex ${
                                message.type === "user"
                                    ? "justify-end"
                                    : "justify-start"
                            }`}
                        >
                            <div
                                className={`max-w-[80%] p-3 rounded-lg ${
                                    message.type === "user"
                                        ? "bg-emerald-600 text-white rounded-br-none"
                                        : "bg-gray-100 text-gray-800 rounded-bl-none"
                                }`}
                            >
                                {formatMessage(message.content)}
                            </div>
                        </div>
                    ))}
                    {isTyping && (
                        <div className="flex justify-start">
                            <div className="bg-gray-100 text-gray-800 p-3 rounded-lg rounded-bl-none">
                                <div className="flex space-x-2">
                                    <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                                    <div
                                        className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"
                                        style={{ animationDelay: "0.2s" }}
                                    ></div>
                                    <div
                                        className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"
                                        style={{ animationDelay: "0.4s" }}
                                    ></div>
                                </div>
                            </div>
                        </div>
                    )}
                </div>

                {/* Input */}
                <form onSubmit={handleSendMessage} className="p-4 border-t">
                    <div className="flex gap-2">
                        <input
                            type="text"
                            value={inputMessage}
                            onChange={(e) => setInputMessage(e.target.value)}
                            placeholder={
                                language === "hindi"
                                    ? "рдЕрдкрдирд╛ рд╕рдВрджреЗрд╢ рдпрд╣рд╛рдВ рдЯрд╛рдЗрдк рдХрд░реЗрдВ..."
                                    : "Type your message..."
                            }
                            className="flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-600"
                        />
                        <button
                            type="submit"
                            className="bg-emerald-600 text-white p-2 rounded-lg hover:bg-emerald-700 transition-colors"
                        >
                            <FaPaperPlane />
                        </button>
                    </div>
                </form>
            </div>
        </div>
    );
};

export default ChatBot;
